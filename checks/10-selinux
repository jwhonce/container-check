#!/usr/bin/env python

import errno
import sys

from checking.utils import Audit, Rpm, Selinux, log_error, log_info

# will be set to True on any failed confirm
error = False
FILES = []
rpm = None


def confirm(boolean, message):
    global error
    if not boolean:
        error = True
        log_error(message)


# If package is not installed fail fast and early
try:
    rpm = Rpm('container-selinux', prefix=None)
    rpm.verify()
    FILES = rpm.files

    log_info('System of record: package ' + rpm.nvr)
except OSError as e:
    log_error(e.strerror)
    if e.errno == errno.ENOENT:
        error = True

selinux = Selinux()
for path in FILES:
    try:
        # Side effect: The existance of the 'path' will also be verified
        selinux.verify(path)
    except OSError as e:
        log_error(e)
        error = True

confirm(selinux.isenabled, 'selinux enforcing is OFF')

for avc in Audit('/var/log/audit/audit.log').avc():
    # Make avc look like ausearch output
    log_error((
        'time->{timestamp} type={type} {seresult} {{{seperms}}}'
        ' for pid={pid} comm={comm}'
        ' scontext={scontext} tcontext={tcontext}'
        ' tclass={tclass} permissive={permissive}'
    ).format(**avc))

sys.exit(0 if not error else 1)
