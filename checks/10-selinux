#!/usr/bin/env python

import sys

from checking.utils import Audit, Rpm, Selinux, log_error, log_info

# will be set to True on any failed confirm
error = False
FILES = []

# pull container-selinux from container
with Rpm('container-selinux', prefix=None) as rpm:
    if rpm.verify():
        FILES.extend(rpm.files)

        log_info('System of record: package ' + rpm.nvr)
    else:
        error = True

# verify files on the host
selinux = Selinux()
for path in FILES:
    error |= not selinux.verify(path)


def confirm(boolean, message):
    global error
    if not boolean:
        error = True
        log_error(message)


confirm(selinux.isenabled, 'selinux enforcing is OFF')

try:
    for avc in Audit('/var/log/audit/audit.log').avc():
        # Make avc look like ausearch output
        log_error((
            'time->{timestamp} type={type} {seresult} {{{seperms}}}'
            ' for pid={pid} comm={comm}'
            ' scontext={scontext} tcontext={tcontext}'
            ' tclass={tclass} permissive={permissive}'
        ).format(**avc))
except (IOError, OSError) as e:
    log_error(e)

sys.exit(0 if not error else 1)
