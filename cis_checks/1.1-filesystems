#!/usr/bin/env python
"""1.1 Filesystem Configuration, see page 19."""
import collections

from checking.utils import Checked, Kmod, Pathname, Systemd

mount_point = collections.namedtuple('MountPoint',
                                     'device name fstype options dump pass_')

with Checked() as (confirm, error):
    kmod = Kmod()
    for fs in (
            'cramfs',
            'freexfs',
            'hfs',
            'hfsplus',
            'jffs2',
            'squashfs',
            'udf',
            'vfat',
    ):
        confirm(
            not kmod.is_present(fs),
            'Uncommon filesystem "{}" may impact security controls.'.format(
                fs))

    mounts = {}
    with open(Pathname('/proc/mounts')) as m:
        for line in m.readlines():
            mp = mount_point._make(line.split())
            mounts[mp.name] = mp

    for fs in ('/tmp', '/var/tmp'):
        try:
            confirm('nosuid' in mounts[fs].options,
                    '"{}" is not intended for storage of executables. '
                    'Add nosuid mount option'.format(fs))
            confirm('nodev' in mounts[fs].options,
                    '"{}" is not intended to support devices. '
                    'Add nodev mount option'.format(fs))
            confirm('noexec' in mounts[fs].options,
                    '"{}" is not intended for storage of executables. '
                    'Add noexec mount option'.format(fs))
        except KeyError:
            confirm(fs in mounts,
                    '"{}" should be on a unique filesystem.'.format(fs))

    for fs in ('/var/log', '/var/log/audit'):
        confirm(fs in mounts,
                '"{}" should be on a unique filesystem.'.format(fs))

    service = Systemd('autofs.service')
    confirm(service.isactive, 'atofs.service should not be active')
    confirm(service.isenabled, 'atofs.service should not be enabled')
